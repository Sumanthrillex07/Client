{"ast":null,"code":"var _jsxFileName = \"D:\\\\CHat app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useState } from \"react\";\nimport Chat from \"./Chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nfunction App() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [bool, setBool] = useState(false);\n  const joinRoom = () => {\n    if (name !== \"\" && room !== \"\") {\n      socket.emit(\"join\", room);\n      socket.emit(\"identity\", name);\n      socket.on(\"\");\n      setBool(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !bool ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Join Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        onChange: event => {\n          setName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room ID\",\n        onChange: event => {\n          setRoom(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        children: \"Start Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Chat, {\n      socket: socket,\n      name: name,\n      room: room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OhgVSExJqgh44AOQt0W+lsP8HKs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useState","Chat","jsxDEV","_jsxDEV","socket","connect","App","_s","name","setName","room","setRoom","bool","setBool","joinRoom","emit","on","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","event","target","value","onClick","_c","$RefreshReg$"],"sources":["D:/CHat app/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useState } from \"react\";\nimport Chat from \"./Chat\";\n\nconst socket = io.connect(\"http://localhost:3001\");\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [bool, setBool] = useState(false);\n\n  const joinRoom = () => {\n    if (name !== \"\" && room !== \"\") {\n      socket.emit(\"join\", room);\n      socket.emit(\"identity\", name);\n      socket.on(\"\")\n      setBool(true);\n    }\n  };\n  return (\n    <div className=\"App\">\n      {!bool ? (\n        <div className=\"chatContainer\">\n          <h3>Join Chat</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            onChange={(event) => {\n              setName(event.target.value);\n            }}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Room ID\"\n            onChange={(event) => {\n              setRoom(event.target.value);\n            }}\n          />\n          <button onClick={joinRoom}>Start Chat</button>\n        </div>\n      ) : (\n        <Chat socket={socket} name={name} room={room} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,EAAE,MAAM,kBAAkB;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGL,EAAE,CAACM,OAAO,CAAC,uBAAuB,CAAC;AAClD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMc,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIN,IAAI,KAAK,EAAE,IAAIE,IAAI,KAAK,EAAE,EAAE;MAC9BN,MAAM,CAACW,IAAI,CAAC,MAAM,EAAEL,IAAI,CAAC;MACzBN,MAAM,CAACW,IAAI,CAAC,UAAU,EAAEP,IAAI,CAAC;MAC7BJ,MAAM,CAACY,EAAE,CAAC,EAAE,CAAC;MACbH,OAAO,CAAC,IAAI,CAAC;IACf;EACF,CAAC;EACD,oBACEV,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjB,CAACN,IAAI,gBACJT,OAAA;MAAKc,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5Bf,OAAA;QAAAe,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBnB,OAAA;QACEoB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,MAAM;QAClBC,QAAQ,EAAGC,KAAK,IAAK;UACnBjB,OAAO,CAACiB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QAC7B;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFnB,OAAA;QACEoB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,SAAS;QACrBC,QAAQ,EAAGC,KAAK,IAAK;UACnBf,OAAO,CAACe,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QAC7B;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFnB,OAAA;QAAQ0B,OAAO,EAAEf,QAAS;QAAAI,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,gBAENnB,OAAA,CAACF,IAAI;MAACG,MAAM,EAAEA,MAAO;MAACI,IAAI,EAAEA,IAAK;MAACE,IAAI,EAAEA;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAChD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACf,EAAA,CAvCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}